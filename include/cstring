#ifndef _LIGHTCXX_GUARD_CSTRING
#define _LIGHTCXX_GUARD_CSTRING

#ifdef NULL
#undef NULL  // We make our own macros!
#endif
#define NULL nullptr

namespace std {

using size_t = decltype(sizeof(nullptr));

char* strcpy(char* __dst, const char* __src);
char* strncpy(char* __dst, const char* __src, size_t __n);
char* strcat(char* __dst, const char* __src);
char* strncat(char* __dst, const char* __src, size_t __n);
size_t strxfrm(char* __dst, const char* __src, size_t __n);
size_t strlen(const char* __str);
int strcmp(const char* __lhs, const char* __rhs);
int strncmp(const char* __lhs, const char* __rhs, size_t __n);
int strcoll(const char* __lhs, const char* __rhs);
const char* strchr(const char* __str, int __ch);
char* strchr(char* __str, int __ch);
const char* strrchr(const char* __str, int __ch);
char* strrchr(char* __str, int __ch);
size_t strspn(const char* __dst, const char* __src);
size_t strcspn(const char* __dst, const char* __src);
const char* strpbrk(const char* __dst, const char* __breakset);
char* strpbrk(char* __dst, const char* __breakset);
const char* strstr(const char* __haystack, const char* __needle);
char* strstr(char* __haystack, const char* __needle);
char* strtok(char* __str, const char* __delim);
char* strerror(int __errnum);

const void* memchr(const void* __ptr, int __ch, size_t __n);
void* memchr(void* __ptr, int __ch, size_t __n);
int memcmp(const void* __lhs, const void* __rhs, size_t __n);
void* memset(void* __dst, int __ch, size_t __n);
void* memcpy(void* __dst, const void* __src, size_t __n);
void* memmove(void* __dst, const void* __src, size_t __n);

}  // namespace std

#endif
