#ifndef _LIGHTCXX_GUARD_CSTDINT
#define _LIGHTCXX_GUARD_CSTDINT

namespace std {

using int8_t = __INT8_TYPE__;
using int16_t = __INT16_TYPE__;
using int32_t = __INT32_TYPE__;
using int64_t = __INT64_TYPE__;

using int_fast8_t = __INT_FAST8_TYPE__;
using int_fast16_t = __INT_FAST16_TYPE__;
using int_fast32_t = __INT_FAST32_TYPE__;
using int_fast64_t = __INT_FAST64_TYPE__;

using int_least8_t = __INT_LEAST8_TYPE__;
using int_least16_t = __INT_LEAST16_TYPE__;
using int_least32_t = __INT_LEAST32_TYPE__;
using int_least64_t = __INT_LEAST64_TYPE__;

using intmax_t = __INTMAX_TYPE__;
using intptr_t = __INTPTR_TYPE__;

using uint8_t = __UINT8_TYPE__;
using uint16_t = __UINT16_TYPE__;
using uint32_t = __UINT32_TYPE__;
using uint64_t = __UINT64_TYPE__;

using uint_fast8_t = __UINT_FAST8_TYPE__;
using uint_fast16_t = __UINT_FAST16_TYPE__;
using uint_fast32_t = __UINT_FAST32_TYPE__;
using uint_fast64_t = __UINT_FAST64_TYPE__;

using uint_least8_t = __UINT_LEAST8_TYPE__;
using uint_least16_t = __UINT_LEAST16_TYPE__;
using uint_least32_t = __UINT_LEAST32_TYPE__;
using uint_least64_t = __UINT_LEAST64_TYPE__;

using uintmax_t = __UINTMAX_TYPE__;
using uintptr_t = __UINTPTR_TYPE__;

}  // namespace std

#define INTMAX_MIN (-__INTMAX_MAX__ - 1)
#define INTMAX_MAX __INTMAX_MAX__
#define UINTMAX_MAX __UINTMAX_MAX__

#define INTPTR_MIN (-__INTPTR_MAX__ - 1)
#define INTPTR_MAX __INTPTR_MAX__
#define UINTPTR_MAX __UINTPTR_MAX__

#define PTRDIFF_MIN (-__PTRDIFF_MAX__ - 1)
#define PTRDIFF_MAX __PTRDIFF_MAX__
#define SIZE_MAX __SIZE_MAX__

#define SIG_ATOMIC_MIN (-__SIG_ATOMIC_MAX__ - 1)
#define SIG_ATOMIC_MAX __SIG_ATOMIC_MAX__

#define WCHAR_MIN (-__WCHAR_MAX__ - 1)
#define WCHAR_MAX __WCHAR_MAX__

#ifndef __WINT_MIN__
#    define WINT_MIN (-__WINT_MAX__ - 1)
#else
#    define WINT_MIN __WINT_MIN__
#endif
#define WINT_MAX __WINT_MAX__

// TODO: Clang's values diverge from libc implementation, investigate further / file a bug!
#if __clang__ && !__APPLE__
#    undef __INT_FAST16_TYPE__
#    define __INT_FAST16_TYPE__ long
#    undef __INT_FAST16_MAX__
#    define __INT_FAST16_MAX__ 9223372036854775807L

#    undef __INT_FAST32_TYPE__
#    define __INT_FAST32_TYPE__ long
#    undef __INT_FAST32_MAX__
#    define __INT_FAST32_MAX__ 9223372036854775807L

#    undef __UINT_FAST16_TYPE__
#    define __UINT_FAST16_TYPE__ unsigned long
#    undef __UINT_FAST16_MAX__
#    define __UINT_FAST16_MAX__ 18446744073709551615UL

#    undef __UINT_FAST32_TYPE__
#    define __UINT_FAST32_TYPE__ unsigned long
#    undef __UINT_FAST32_MAX__
#    define __UINT_FAST32_MAX__ 18446744073709551615UL
#endif

#define INT8_MIN (-__INT8_MAX__ - 1)
#define INT8_MAX __INT8_MAX__
#define UINT8_MAX __UINT8_MAX__

#define INT_FAST8_MIN (-__INT_FAST8_MAX__ - 1)
#define INT_FAST8_MAX __INT_FAST8_MAX__
#define UINT_FAST8_MAX __UINT_FAST8_MAX__

#define INT_LEAST8_MIN (-__INT_LEAST8_MAX__ - 1)
#define INT_LEAST8_MAX __INT_LEAST8_MAX__
#define UINT_LEAST8_MAX __UINT_LEAST8_MAX__

#define INT16_MIN (-__INT16_MAX__ - 1)
#define INT16_MAX __INT16_MAX__
#define UINT16_MAX __UINT16_MAX__

#define INT_FAST16_MIN (-__INT_FAST16_MAX__ - 1)
#define INT_FAST16_MAX __INT_FAST16_MAX__
#define UINT_FAST16_MAX __UINT_FAST16_MAX__

#define INT_LEAST16_MIN (-__INT_LEAST16_MAX__ - 1)
#define INT_LEAST16_MAX __INT_LEAST16_MAX__
#define UINT_LEAST16_MAX __UINT_LEAST16_MAX__

#define INT32_MIN (-__INT32_MAX__ - 1)
#define INT32_MAX __INT32_MAX__
#define UINT32_MAX __UINT32_MAX__

#define INT_FAST32_MIN (-__INT_FAST32_MAX__ - 1)
#define INT_FAST32_MAX __INT_FAST32_MAX__
#define UINT_FAST32_MAX __UINT_FAST32_MAX__

#define INT_LEAST32_MIN (-__INT_LEAST32_MAX__ - 1)
#define INT_LEAST32_MAX __INT_LEAST32_MAX__
#define UINT_LEAST32_MAX __UINT_LEAST32_MAX__

#define INT64_MIN (-__INT64_MAX__ - 1)
#define INT64_MAX __INT64_MAX__
#define UINT64_MAX __UINT64_MAX__

#define INT_FAST64_MIN (-__INT_FAST64_MAX__ - 1)
#define INT_FAST64_MAX __INT_FAST64_MAX__
#define UINT_FAST64_MAX __UINT_FAST64_MAX__

#define INT_LEAST64_MIN (-__INT_LEAST64_MAX__ - 1)
#define INT_LEAST64_MAX __INT_LEAST64_MAX__
#define UINT_LEAST64_MAX __UINT_LEAST64_MAX__

#ifndef __INT8_C_SUFFIX__
#    define INTMAX_C(_V) __INTMAX_C(_V)
#    define UINTMAX_C(_V) __UINTMAX_C(_V)
#    define INT8_C(_V) __INT8_C(_V)
#    define UINT8_C(_V) __UINT8_C(_V)
#    define INT16_C(_V) __INT16_C(_V)
#    define UINT16_C(_V) __UINT16_C(_V)
#    define INT32_C(_V) __INT32_C(_V)
#    define UINT32_C(_V) __UINT32_C(_V)
#    define INT64_C(_V) __INT64_C(_V)
#    define UINT64_C(_V) __UINT64_C(_V)
#else
#    define _LIGHT_CAT_IMPL(_A, _B) _A##_B
#    define _LIGHT_CAT_2(_A, _B) _LIGHT_CAT_IMPL(_A, _B)
#    define _LIGHT_CAT_3(_A, _B, _C) _LIGHT_CAT_2(_A, _LIGHT_CAT_2(_B, _C))

#    define INTMAX_C(_V) _LIGHT_CAT_2(_V, __INTMAX_C_SUFFIX__)
#    define UINTMAX_C(_V) _LIGHT_CAT_3(_V, U, __INTMAX_C_SUFFIX__)
#    define INT8_C(_V) _LIGHT_CAT_2(_V, __INT8_C_SUFFIX__)
#    define UINT8_C(_V) _LIGHT_CAT_3(_V, U, __INT8_C_SUFFIX__)
#    define INT16_C(_V) _LIGHT_CAT_2(_V, __INT16_C_SUFFIX__)
#    define UINT16_C(_V) _LIGHT_CAT_3(_V, U, __INT16_C_SUFFIX__)
#    define INT32_C(_V) _LIGHT_CAT_2(_V, __INT32_C_SUFFIX__)
#    define UINT32_C(_V) _LIGHT_CAT_3(_V, U, __INT32_C_SUFFIX__)
#    define INT64_C(_V) _LIGHT_CAT_2(_V, __INT64_C_SUFFIX__)
#    define UINT64_C(_V) _LIGHT_CAT_3(_V, U, __INT64_C_SUFFIX__)
#endif

#endif
